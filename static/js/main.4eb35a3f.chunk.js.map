{"version":3,"sources":["components/MyNavbar.tsx","components/Home.tsx","candidates.js","components/Candidate.tsx","components/Sidebar.tsx","components/Candidates.tsx","components/Vote.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MyNavbar","props","Navbar","variant","expand","sticky","Container","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","React","Component","Home","Jumbotron","Button","listOfCandidates","pdfjs","GlobalWorkerOptions","workerSrc","version","Candidate","onDocumentLoadSuccess","numPages","setState","handleClick","e","preventDefault","target","state","pageNum","prevState","bind","Col","xs","this","name","Image","src","imagePath","recordingPath","controls","ButtonGroup","aria-label","onClick","disabled","file","platformPath","onLoadSuccess","onLoadError","console","error","pageNumber","scale","Sidebar","items","personNames","currentClassName","navLinks","Candidates","window","scroll","behavior","top","offset","allCandidates","person","push","Row","smooth","to","fluid","Vote","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eb35a3f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nimport \"./styles/MyNavbar.css\";\nimport {Container} from \"react-bootstrap\";\n\nexport default class MyNavbar extends React.Component {\n    constructor(props: any) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Navbar variant={\"dark\"} expand={\"lg\"} sticky={\"top\"}>\n                <Container>\n                    <Navbar.Brand>Daily Princetonian Elections</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"navbar\"/>\n                    <Navbar.Collapse id={\"navbar\"}>\n                        <Nav className={\"mr-auto\"}>\n                            <Nav.Link href={\"#/\"}>Home</Nav.Link>\n                            <Nav.Link href={\"#/meet-the-candidates\"}>Meet the Candidates</Nav.Link>\n                            <Nav.Link href={\"#/vote\"}>Vote</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        )\n    }\n}\n","import React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./styles/Home.css\";\n\nexport default class Home extends React.Component {\n    constructor(props: any) {\n        super(props);\n    }\n\n    render() {\n\n        return (\n            <Jumbotron>\n                <Container>\n                    <h1 className={\"text-center display-4\"}>Daily Princetonian 145th Managing Board Elections</h1>\n                    <p className={\"lead text-center\"}>\n                    Thank you for participating in The Daily Princetonian’s 2020 Editor-in-Chief election!\n                    </p>\n                    <hr/>\n                    <p className={\"intro-p\"}>\n                    On this site, you’ll find your personal ballot, as well as each candidate’s platform and pre-recorded speech.\n                    If you have any questions or encounter technical difficulties, please contact Jon at <a href=\"mailto:jaort@princeton.edu\">jaort@princeton.edu</a>.\n                    </p>\n\n                    <Button variant={\"orange\"} className={\"text-center\"} href={\"#/vote\"}>Vote Now!</Button>{' '}\n                    <Button variant={\"outline-orange\"} className={\"text-center\"}\n                            href={\"#/meet-the-candidates\"}>Meet the Candidates</Button>\n                </Container>\n            </Jumbotron>\n        )\n    }\n}\n","export const listOfCandidates = [\n  {\n      'name': 'Anna McGee',\n      'imagePath': './images/mcgee.jpg',\n      'recordingPath': './recordings/mcgee.m4a',\n      'platformPath': './platforms/mcgee.pdf'\n  },\n  {\n      'name': 'Kenny Peng',\n      'imagePath': './images/peng.jpg',\n      'recordingPath': './recordings/peng.m4a',\n      'platformPath': './platforms/peng.pdf'\n  },\n  {\n      'name': 'Emma Treadway',\n      'imagePath': './images/treadway.jpg',\n      'recordingPath': './recordings/treadway.m4a',\n      'platformPath': './platforms/treadway.pdf'\n  }\n]\n","import React from \"react\";\nimport {Button, ButtonGroup, Col, Image} from \"react-bootstrap\";\n\nimport \"./styles/Candidate.css\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport {Document, Page, pdfjs} from \"react-pdf\";\n\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\ninterface IProps {\n    name: string,\n    imagePath: string,\n    platformPath: string,\n    recordingPath: string,\n\n}\n\ninterface IState {\n    numPages: number,\n    pageNum: number\n}\n\nexport default class Candidate extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            numPages: 0,\n            pageNum: 1\n        }\n\n        this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    // @ts-ignore\n    onDocumentLoadSuccess = ({numPages}) => {\n        this.setState({numPages: numPages})\n    }\n\n    handleClick = (e: any) => {\n        e.preventDefault();\n\n        switch (e.target.id) {\n            case \"next-page\":\n                if (this.state.pageNum + 1 > this.state.numPages) return;\n                this.setState(prevState => ({pageNum: prevState.pageNum + 1}));\n                break;\n            case \"prev-page\":\n                if (this.state.pageNum - 1 < 0) return;\n                this.setState(prevState => ({pageNum: prevState.pageNum - 1}));\n        }\n    }\n\n    render() {\n        // @ts-ignore\n        return (\n            <Col xs={12} className={\"candidate\"}>\n                <div className={\"details\"}>\n                    <div className=\"flex-item left\">\n                        <h3 className={\"name\"}>{this.props.name}</h3>\n                        <Image src={this.props.imagePath} className={\"candidate-image\"}/>\n                        <ReactAudioPlayer src={this.props.recordingPath} controls/>\n                    </div>\n                    <div className={\"flex-item\"}>\n                        <div className={\"doc\"}>\n                            <ButtonGroup className={\"button-group\"} aria-label=\"Basic example\">\n                                <Button variant=\"orange\" id={\"prev-page\"} onClick={this.handleClick}>&#8592;</Button>\n                                <Button variant=\"light\"\n                                        disabled>Page {this.state.pageNum} of {this.state.numPages}</Button>\n                                <Button variant=\"orange\" id={\"next-page\"} onClick={this.handleClick}>&#8594;</Button>\n                            </ButtonGroup>\n                            <Document file={this.props.platformPath}\n                                      onLoadSuccess={this.onDocumentLoadSuccess} onLoadError={console.error}>\n                                <Page pageNumber={this.state.pageNum} scale={1.5}/>\n                            </Document>\n                            <ButtonGroup className={\"button-group\"} aria-label=\"Basic example\">\n                                <Button variant=\"orange\" id={\"prev-page\"} onClick={this.handleClick}>&#8592;</Button>\n                                <Button variant=\"light\"\n                                        disabled>Page {this.state.pageNum} of {this.state.numPages}</Button>\n                                <Button variant=\"orange\" id={\"next-page\"} onClick={this.handleClick}>&#8594;</Button>\n                            </ButtonGroup>\n                        </div>\n                    </div>\n                </div>\n            </Col>\n        );\n    }\n}\n","import Scrollspy from \"react-scrollspy\";\nimport React from \"react\";\nimport \"./styles/Sidebar.css\";\n\ninterface IProps {\n    personNames: string[];\n    navLinks: JSX.Element[];\n}\n\nexport default class Sidebar extends React.Component<IProps> {\n\n\n    render() {\n\n        return (\n        <div className={\"sidebar\"}>\n            <h4 className={\"text-center sidebar-header\"}>Candidates</h4>\n            <Scrollspy items={this.props.personNames} currentClassName={\"isActive\"}>\n                {this.props.navLinks}\n            </Scrollspy>\n        </div>\n        );\n    }\n\n}\n","import React from \"react\";\n\nimport {listOfCandidates} from \"../candidates\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport { HashLink } from 'react-router-hash-link';\nimport Candidate from \"./Candidate\";\nimport \"./styles/Candidates.css\";\nimport Sidebar from \"./Sidebar\";\n\nexport default class Candidates extends React.Component {\n\n    constructor(props: any) {\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e: any) {\n        e.preventDefault();\n\n        window.scroll({\n            behavior: \"smooth\",\n            top: e.offset.top - 10000\n        })\n    }\n\n    render() {\n\n        // let positionNames: string[] = [];\n        // let peopleForThatPosition: Candidate[] = [];\n        // let allCandidates: JSX.Element[] = [];\n        // let navLinks: JSX.Element[] = [];\n        //\n        // for (let position of listOfCandidates) {\n        //     positionNames.push(position.position)\n        //\n        //     let temp: any = [];\n        //     for (let person of position.candidates) {\n        //         temp.push(<Candidate name={person.name} imagePath={person.imagePath} statement={person.statement}/>);\n        //     }\n        //\n        //     peopleForThatPosition.push(temp);\n        // }\n        // for (let i = 0; i < positionNames.length; i++) {\n        //     allCandidates.push(\n        //         <section id={positionNames[i]}>\n        //             <h2>{positionNames[i]}</h2>\n        //             <Row>\n        //                 {peopleForThatPosition[i]}\n        //             </Row>\n        //         </section>\n        //     );\n        //\n        //     navLinks.push(<li className={\"position\"}><a href={\"#\" + positionNames[i]}>{positionNames[i]}</a></li>);\n        // }\n\n        let personNames: any[] = [];\n        let allCandidates: any[] = [];\n        let navLinks: any[] = [];\n\n        for (let person of listOfCandidates) {\n            personNames.push(person.name);\n            allCandidates.push(\n                <>\n                    <div className={\"fake-div\"} id={person.name}/>\n                    <section>\n                        <Row>\n                            <Candidate name={person.name} imagePath={person.imagePath}\n                                       recordingPath={person.recordingPath}\n                                       platformPath={person.platformPath}/>\n                        </Row>\n                    </section>\n                </>\n            );\n            navLinks.push(<li className=\"person\"><HashLink smooth to={\"/meet-the-candidates#\" + person.name}>{person.name}</HashLink></li>);\n        }\n\n        return (\n            <Container fluid>\n                <Row>\n                    <Col xs={2}>\n                        <Sidebar navLinks={navLinks} personNames={personNames}/>\n                    </Col>\n                    <Col xs={10}>\n                        <main className={\"content\"}>\n                            <h2 className={\"display-4 title\"}>Meet the Candidates</h2>\n                            <p className={\"\"}>\n                                Here you can see all the candidates who are running,\n                                listen to their introductory speeches, and read their platforms.\n                            </p>\n                            {allCandidates}\n                            <p>\n                              Use the sidebar to view other candidates!\n                            </p>\n                        </main>\n                    </Col>\n                </Row>\n\n            </Container>\n        );\n    }\n}\n","import React from \"react\";\nimport {Container, Jumbotron} from \"react-bootstrap\";\n\nimport \"./styles/Vote.css\";\n\nexport default class Vote extends React.Component {\n\n    render() {\n\n        return (\n            <Jumbotron>\n                <Container fluid>\n                    <h1 className={\"text-center display-4 vote-title\"}>Vote now!</h1>\n                    <p className={\"lead text-center\"}>You can cast your vote for each office in the Google form below.\n                        Not sure who to vote for? Check out\n                        each candidate's platform <a href={\"#/meet-the-candidates\"}>here</a>!\n                    </p>\n                </Container>\n                <div className=\"form\">\n                <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLScfbPWrAJJVugGNC-63yTDLOUNNheGUTgWReA7zH5WZ9MV6vg/viewform?embedded=true\">Loading…</iframe>\n                </div>\n            </Jumbotron>\n        );\n    }\n}\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport MyNavbar from \"./components/MyNavbar\";\nimport Home from \"./components/Home\";\nimport Candidates from \"./components/Candidates\";\nimport Vote from \"./components/Vote\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <MyNavbar/>\n\n                <Switch>\n                    <Route path={\"/meet-the-candidates\"} ><Candidates /></Route>\n                    <Route path={\"/vote\"}><Vote /></Route>\n                    <Route path={\"/\"}><Home /></Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}